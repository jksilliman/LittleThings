http://gis.uchicago.edu/data.htm#regionaldata

Our DBF File:
  https://gisapps.cityofchicago.org/ArcGISRest/services/CachedMaps/CartoCache/MapServer/10
  Possible info about column names: http://www.pagcgeo.org/docs/html/pagc-6.html
  
  Description of Address Centerline File
  https://docs.google.com/viewer?a=v&q=cache:cyV8LasiIU4J:www.metrogis.org/teams/workgroups/e911_streets/specs.pdf+&hl=en&gl=us&pid=bl&srcid=ADGEESgCREd6rNi8azHe4ZAlIYRSxXBWXkJYzrzumLdswdja6fG-Ny8iDqy6bFXb9EovMphM6DTQF4zQK96k8Ialv0XftWcRQKdsj4t_yIBacJ3wqbslj8UESpmP4G9Hlkc-YJJBh2gW&sig=AHIEtbSfg8zhomh9PKmHEJ0le-li5wZK8A





Shape Data: http://code.google.com/p/pyshp/
            .shp — shape format; the feature geometry itself
            .shx — shape index format; a positional index of the feature geometry to allow seeking forwards and backwards quickly
            .dbf — attribute format; columnar attributes for each shape, in dBase IV format
            .prj — projection format; the coordinate system and projection information, a plain text file describing the projection using well-known text format
            .sbn and .sbx — a spatial index of the features
  import shapefile
  sf = shapefile.Reader("./Transportation")
  sf.shape(i)
             .points
             .bbox 
  
  
  
GDAL - We will use it to convert .prj to Proj.4 format for use with pyproj 
  http://stackoverflow.com/questions/3149112/how-can-i-proj4-details-from-the-shape-files-prj-file
+proj=tmerc +lat_0=36.66666666666666 +lon_0=-88.33333333333333 +k=0.9999749999999999 +x_0=300000 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs



Hyde Park Location: 
  daddr=41.79704, -87.594341
  sll=  41.796512,-87.592578



Projection Intepretation: http://code.google.com/p/pyproj/
                          http://geospatialpython.com/2011/09/map-projections.html
                          http://pyproj.googlecode.com/svn/trunk/docs/pyproj.Proj-class.html

  from pyproj import Proj
  p = Proj("+proj=tmerc +lat_0=36.66666666666666 +lon_0=-88.33333333333333 +k=0.9999749999999999 +x_0=300000 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs")
  'lon=%8.3f lat=%5.3f' % p(x,y,inverse=True)


# Obtained via prj_to_proj4.py
# p = Proj("+proj=tmerc +lat_0=36.66666666666666 +lon_0=-88.33333333333333 +k=0.9999749999999999 +x_0=300000 +y_0=0 +ellps=GRS80 +units=us-ft +no_defs")
#def trans(point):
#  x, y = point
#  return str(p(x,y,inverse=True))


